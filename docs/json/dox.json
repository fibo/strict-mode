{
    "strictMode": [
        {
            "tags": [
                {
                    "type": "param",
                    "types": [
                        "Function"
                    ],
                    "name": "callback",
                    "description": "<p>containing caller package&#39;s exports statements</p>\n"
                }
            ],
            "description": {
                "full": "<p>Package <code>exports</code> wrapper</p>\n<p>See <a href=\"./#usage\">Usage</a></p>\n",
                "summary": "<p>Package <code>exports</code> wrapper</p>\n",
                "body": "<p>See <a href=\"./#usage\">Usage</a></p>\n"
            },
            "isPrivate": false,
            "ignore": false,
            "code": "function exportsWrapper (callback) {\n  \"use strict\";\n\n  if (typeof callback !== 'function')\n    throw new TypeError('Not a function')\n\n  // Avoid nested require('strict-mode')\n  if (strictModeExecuting)\n    throw new Error('Nested strict-mode calls')\n\n  strictModeExecuting = true\n\n  var module = require('module')\n  module.wrapper[0] = strictWrapper\n\n  // Every require in this callback will load modules in strict mode.\n  try {\n    callback()\n  }\n  catch (err) {\n      console.error(err.stack)\n  }\n\n  // Restore orig module wrapper, play well with others.\n  module.wrapper[0] = origWrapper\n}\n\nmodule.exports = exportsWrapper",
            "ctx": {
                "type": "function",
                "name": "exportsWrapper",
                "string": "exportsWrapper()"
            }
        }
    ]
}